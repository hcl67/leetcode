'''
https://leetcode.com/problems/beautiful-array/
'''
class Solution:
    def beautifulArray(self, n: int) -> List[int]:
        list1000 = [511, 767, 255, 895, 383, 639, 127, 959, 447, 703, 191, 831, 319, 575, 63, 991, 479, 735, 223, 863, 351, 607, 95, 927, 415, 671, 159, 799, 287, 543, 31, 495, 751, 239, 879, 367, 623, 111, 943, 431, 687, 175, 815, 303, 559, 47, 975, 463, 719, 207, 847, 335, 591, 79, 911, 399, 655, 143, 783, 271, 527, 15, 503, 759, 247, 887, 375, 631, 119, 951, 439, 695, 183, 823, 311, 567, 55, 983, 471, 727, 215, 855, 343, 599, 87, 919, 407, 663, 151, 791, 279, 535, 23, 999, 487, 743, 231, 871, 359, 615, 103, 935, 423, 679, 167, 807, 295, 551, 39, 967, 455, 711, 199, 839, 327, 583, 71, 903, 391, 647, 135, 775, 263, 519, 7, 507, 763, 251, 891, 379, 635, 123, 955, 443, 699, 187, 827, 315, 571, 59, 987, 475, 731, 219, 859, 347, 603, 91, 923, 411, 667, 155, 795, 283, 539, 27, 491, 747, 235, 875, 363, 619, 107, 939, 427, 683, 171, 811, 299, 555, 43, 971, 459, 715, 203, 843, 331, 587, 75, 907, 395, 651, 139, 779, 267, 523, 11, 499, 755, 243, 883, 371, 627, 115, 947, 435, 691, 179, 819, 307, 563, 51, 979, 467, 723, 211, 851, 339, 595, 83, 915, 403, 659, 147, 787, 275, 531, 19, 995, 483, 739, 227, 867, 355, 611, 99, 931, 419, 675, 163, 803, 291, 547, 35, 963, 451, 707, 195, 835, 323, 579, 67, 899, 387, 643, 131, 771, 259, 515, 3, 509, 765, 253, 893, 381, 637, 125, 957, 445, 701, 189, 829, 317, 573, 61, 989, 477, 733, 221, 861, 349, 605, 93, 925, 413, 669, 157, 797, 285, 541, 29, 493, 749, 237, 877, 365, 621, 109, 941, 429, 685, 173, 813, 301, 557, 45, 973, 461, 717, 205, 845, 333, 589, 77, 909, 397, 653, 141, 781, 269, 525, 13, 501, 757, 245, 885, 373, 629, 117, 949, 437, 693, 181, 821, 309, 565, 53, 981, 469, 725, 213, 853, 341, 597, 85, 917, 405, 661, 149, 789, 277, 533, 21, 997, 485, 741, 229, 869, 357, 613, 101, 933, 421, 677, 165, 805, 293, 549, 37, 965, 453, 709, 197, 837, 325, 581, 69, 901, 389, 645, 133, 773, 261, 517, 5, 505, 761, 249, 889, 377, 633, 121, 953, 441, 697, 185, 825, 313, 569, 57, 985, 473, 729, 217, 857, 345, 601, 89, 921, 409, 665, 153, 793, 281, 537, 25, 489, 745, 233, 873, 361, 617, 105, 937, 425, 681, 169, 809, 297, 553, 41, 969, 457, 713, 201, 841, 329, 585, 73, 905, 393, 649, 137, 777, 265, 521, 9, 497, 753, 241, 881, 369, 625, 113, 945, 433, 689, 177, 817, 305, 561, 49, 977, 465, 721, 209, 849, 337, 593, 81, 913, 401, 657, 145, 785, 273, 529, 17, 993, 481, 737, 225, 865, 353, 609, 97, 929, 417, 673, 161, 801, 289, 545, 33, 961, 449, 705, 193, 833, 321, 577, 65, 897, 385, 641, 129, 769, 257, 513, 1, 2, 514, 258, 770, 130, 642, 386, 898, 66, 578, 322, 834, 194, 706, 450, 962, 34, 546, 290, 802, 162, 674, 418, 930, 98, 610, 354, 866, 226, 738, 482, 994, 18, 530, 274, 786, 146, 658, 402, 914, 82, 594, 338, 850, 210, 722, 466, 978, 50, 562, 306, 818, 178, 690, 434, 946, 114, 626, 370, 882, 242, 754, 498, 10, 522, 266, 778, 138, 650, 394, 906, 74, 586, 330, 842, 202, 714, 458, 970, 42, 554, 298, 810, 170, 682, 426, 938, 106, 618, 362, 874, 234, 746, 490, 26, 538, 282, 794, 154, 666, 410, 922, 90, 602, 346, 858, 218, 730, 474, 986, 58, 570, 314, 826, 186, 698, 442, 954, 122, 634, 378, 890, 250, 762, 506, 6, 518, 262, 774, 134, 646, 390, 902, 70, 582, 326, 838, 198, 710, 454, 966, 38, 550, 294, 806, 166, 678, 422, 934, 102, 614, 358, 870, 230, 742, 486, 998, 22, 534, 278, 790, 150, 662, 406, 918, 86, 598, 342, 854, 214, 726, 470, 982, 54, 566, 310, 822, 182, 694, 438, 950, 118, 630, 374, 886, 246, 758, 502, 14, 526, 270, 782, 142, 654, 398, 910, 78, 590, 334, 846, 206, 718, 462, 974, 46, 558, 302, 814, 174, 686, 430, 942, 110, 622, 366, 878, 238, 750, 494, 30, 542, 286, 798, 158, 670, 414, 926, 94, 606, 350, 862, 222, 734, 478, 990, 62, 574, 318, 830, 190, 702, 446, 958, 126, 638, 382, 894, 254, 766, 510, 4, 516, 260, 772, 132, 644, 388, 900, 68, 580, 324, 836, 196, 708, 452, 964, 36, 548, 292, 804, 164, 676, 420, 932, 100, 612, 356, 868, 228, 740, 484, 996, 20, 532, 276, 788, 148, 660, 404, 916, 84, 596, 340, 852, 212, 724, 468, 980, 52, 564, 308, 820, 180, 692, 436, 948, 116, 628, 372, 884, 244, 756, 500, 12, 524, 268, 780, 140, 652, 396, 908, 76, 588, 332, 844, 204, 716, 460, 972, 44, 556, 300, 812, 172, 684, 428, 940, 108, 620, 364, 876, 236, 748, 492, 28, 540, 284, 796, 156, 668, 412, 924, 92, 604, 348, 860, 220, 732, 476, 988, 60, 572, 316, 828, 188, 700, 444, 956, 124, 636, 380, 892, 252, 764, 508, 8, 520, 264, 776, 136, 648, 392, 904, 72, 584, 328, 840, 200, 712, 456, 968, 40, 552, 296, 808, 168, 680, 424, 936, 104, 616, 360, 872, 232, 744, 488, 1000, 24, 536, 280, 792, 152, 664, 408, 920, 88, 600, 344, 856, 216, 728, 472, 984, 56, 568, 312, 824, 184, 696, 440, 952, 120, 632, 376, 888, 248, 760, 504, 16, 528, 272, 784, 144, 656, 400, 912, 80, 592, 336, 848, 208, 720, 464, 976, 48, 560, 304, 816, 176, 688, 432, 944, 112, 624, 368, 880, 240, 752, 496, 32, 544, 288, 800, 160, 672, 416, 928, 96, 608, 352, 864, 224, 736, 480, 992, 64, 576, 320, 832, 192, 704, 448, 960, 128, 640, 384, 896, 256, 768, 512]
        return list(filter(lambda x:x<=n,list1000))
'''        
        import math
        if n == 1:
            return [1]
        ans = [1,2]
        for i in range(3,n+1):
            j = i - pow(2,int(math.log2(i-1))) 
            if i%2 == 0:
                ans.insert(ans.index(j)+1,i)
            else:
                ans.insert(ans.index(j),i)
        return ans
        
'''        
